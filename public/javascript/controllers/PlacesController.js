// Generated by CoffeeScript 1.3.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  define(['controllers/Controller', 'collections/PlacesCollection', 'views/PlaceItemView', 'lib/io'], function(Controller, PlacesCollection, PlaceItemView, io) {
    var PlaceItemController, PlacesController;
    PlaceItemController = (function(_super) {

      __extends(PlaceItemController, _super);

      PlaceItemController.name = 'PlaceItemController';

      function PlaceItemController() {
        this.render = __bind(this.render, this);
        return PlaceItemController.__super__.constructor.apply(this, arguments);
      }

      PlaceItemController.prototype.className = 'place';

      PlaceItemController.prototype.tagName = 'li';

      PlaceItemController.prototype.events = {
        'click .veto': 'veto'
      };

      PlaceItemController.prototype.initialize = function() {
        return this.model.on("change:" + this.model.vetoesKey, this.render);
      };

      PlaceItemController.prototype.render = function() {
        this.html(PlaceItemView(this.model.toJSON()));
        return this;
      };

      PlaceItemController.prototype.veto = function() {
        return this.model.veto();
      };

      return PlaceItemController;

    })(Controller);
    return PlacesController = (function(_super) {

      __extends(PlacesController, _super);

      PlacesController.name = 'PlacesController';

      function PlacesController() {
        return PlacesController.__super__.constructor.apply(this, arguments);
      }

      PlacesController.prototype.className = 'places list';

      PlacesController.prototype.tagName = 'ul';

      PlacesController.prototype.initialize = function() {
        var _this = this;
        this.collection = new PlacesCollection;
        this.collection.on('reset', this.render, this);
        this.collection.fetch();
        return io.on('vote', function() {
          return _this.collection.fetch();
        });
      };

      PlacesController.prototype.render = function() {
        var _this = this;
        this.$el.empty();
        this.append('<h2>What are my options?</h2>');
        this.collection.each(function(place) {
          return _this.append(new PlaceItemController({
            model: place
          }).render());
        });
        return this;
      };

      PlacesController.prototype.findLocation = function() {
        if (!this.collection) {
          throw "No collection!";
        }
        return this.collection.select();
      };

      return PlacesController;

    })(Controller);
  });

}).call(this);
